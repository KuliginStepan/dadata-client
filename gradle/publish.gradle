def pomDefinition = {
    name = 'Dadata Client'
    description = 'Dadata Suggestions API client for Spring'
    url = 'https://github.com/KuliginStepan/dadata-client'
    developers {
        developer {
            id = 'kuliginstepan'
            name = 'Stepan Kuligin'
            email = 'kuligin_stepan@mail.ru'
        }
    }
    licenses {
        license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }
    scm {
        connection = 'scm:git:git://github.com/KuliginStepan/dadata-client.git'
        developerConnection = 'scm:git:ssh://github.com/KuliginStepan/dadata-client.git'
        url = 'https://github.com/KuliginStepan/dadata-client'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            afterEvaluate {
                group = rootProject.group
                version = rootProject.version
            }
            from components.java
            pom(pomDefinition)
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
}

signing {
    if (System.getenv('CI')) {
        def signingKeyId = findProperty("signingKeyId")
        def signingKey = findProperty("signingKey")
        def signingPassword = findProperty("signingPassword")
        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    }
    sign publishing.publications.maven
}